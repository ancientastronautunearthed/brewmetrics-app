rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow logged-in users to read their OWN user document
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      // Allow user creation ONLY if document ID matches user's UID
      // AND the data being written includes the correct ownerId
      allow create: if request.auth != null
                       && request.auth.uid == userId // Doc ID must match user
                       && request.resource.data.ownerId == request.auth.uid; // Ensure ownerId is set correctly
      // Add allow update later if users can update their user doc
      // allow update: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for 'breweries' collection
    match /breweries/{breweryId} {
      // Allow any authenticated user to read brewery info? (Keep for now)
      allow read: if request.auth != null;

      // *** ADD THIS RULE ***
      // Allow a user to CREATE a brewery document IF:
      // 1. They are authenticated (request.auth != null)
      // 2. The brewery document ID being created ({breweryId}) matches THEIR UID (request.auth.uid)
      // 3. The data being written includes an 'ownerId' field that ALSO matches their UID.
      allow create: if request.auth != null
                       && request.auth.uid == breweryId // User can only create brewery doc with their own UID as ID
                       && request.resource.data.ownerId == request.auth.uid; // ownerId field must match

      // Allow update only by the owner (adjust based on your needs)
      // allow update: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    // Rules for 'batches' collection (Adjust as needed)
    match /batches/{batchId} {
      allow read: if request.auth != null;
      // Check breweryId in user doc before allowing write/update/delete
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.breweryId == request.resource.data.breweryId;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.breweryId == resource.data.breweryId;
    }

     // Rules for 'feedback' collection (Adjust as needed)
    match /feedback/{feedbackId} {
        allow create: if true; // Allow anyone to submit feedback
        // Allow read only by user linked to the brewery (owner)
        allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.breweryId == resource.data.breweryId;
        allow update, delete: if false; // Disallow client modification
    }
  }
}